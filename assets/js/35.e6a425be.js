(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{535:function(t,a,s){"use strict";s.r(a);var v=s(21),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("code",[t._v("Synchronized")]),t._v(" 一直被称为重量级锁。但是在JDK 1.6之后它已经变得不那么重了。JDK 1.6 对"),s("code",[t._v("Synchronized")]),t._v(" 的优化点在于：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("引入了偏向锁")])]),t._v(" "),s("li",[s("p",[t._v("引入了轻量级锁")])])]),t._v(" "),s("p",[t._v("在JDK 1.6 中，"),s("code",[t._v("Synchronized")]),t._v(" 锁有四种状态，级别从低到高依次是：无锁、偏向锁、轻量级锁、重量级锁。"),s("br")]),t._v(" "),s("p",[t._v("这几个状态会随着锁竞争升级，但是不可以降级。")]),t._v(" "),s("h3",{attrs:{id:"偏向锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#偏向锁"}},[t._v("#")]),t._v(" 偏向锁")]),t._v(" "),s("p",[s("strong",[t._v("为什么引入偏向锁?")]),t._v(" "),s("br")]),t._v(" "),s("p",[t._v("不存锁竞争，或者总是由同一线程多次获得锁的场景，偏向锁的代价更低。")]),t._v(" "),s("p",[t._v("当一个线程访问同步块并获取到锁时，在锁对象头记录该线程的id，以后该线程进入和退出该同步块时不需要CAS来加锁和解锁。")]),t._v(" "),s("p",[s("strong",[t._v("偏向锁何时释放？")]),t._v(" "),s("br")]),t._v(" "),s("p",[t._v("偏向锁只有遇到其他线程尝试竞争偏向锁时，持有偏向锁的线程才会释放锁，线程是不会主动释放偏向锁的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/e6c9d24ely1h0yn1bt6ncj20u00xm0v2.jpg",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("偏向锁一定起到正面作用吗？")]),t._v(" "),s("br")]),t._v(" "),s("p",[t._v("不是的。"),s("br")]),t._v(" "),s("p",[t._v("偏向锁的适用场景是：不存锁竞争，或者总是由同一线程多次获得锁的场景。")]),t._v(" "),s("p",[t._v("如果你确定你的程序中 锁通常处于竞争状态，可以通过JVM参数关闭偏向锁。关闭后，程序回魔人进入轻量级锁状态。")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\n-XX:UseBiasedLocking"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"轻量级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#轻量级锁"}},[t._v("#")]),t._v(" 轻量级锁")]),t._v(" "),s("p",[t._v("轻量级锁是指当锁是偏向锁的时候，却被另外的线程所访问，此时偏向锁就会升级为轻量级锁，其他线程会通过自旋（关于自旋的介绍见文末）的形式尝试获取锁，线程不会阻塞，从而提高性能。")]),t._v(" "),s("p",[t._v("轻量级锁的获取主要由两种情况：① 当关闭偏向锁功能时；② 由于多个线程竞争偏向锁导致偏向锁升级为轻量级锁。")]),t._v(" "),s("p",[s("strong",[t._v("轻量级锁何时升级为重量级锁?")]),t._v(" "),s("br")]),t._v(" "),s("p",[t._v("若当前只有一个等待线程，则该线程将通过自旋进行等待。但是当自旋超过一定的次数时，轻量级锁便会升级为重量级锁（锁膨胀）。")]),t._v(" "),s("p",[t._v("另外，当一个线程已持有锁，另一个线程在自旋，而此时又有第三个线程来访时，轻量级锁也会升级为重量级锁（锁膨胀）。")]),t._v(" "),s("h3",{attrs:{id:"重量级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重量级锁"}},[t._v("#")]),t._v(" 重量级锁")]),t._v(" "),s("p",[t._v("重量级锁是指当有一个线程获取锁之后，其余所有等待获取该锁的线程都会处于阻塞状态。")]),t._v(" "),s("p",[t._v("重量级锁的获取是释放一般会有线程上下文切换，代价是比较大的，所以说是重量级锁。")]),t._v(" "),s("h3",{attrs:{id:"锁升级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁升级"}},[t._v("#")]),t._v(" 锁升级")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/e6c9d24ely1h0ynbl2j8nj20sg0fy764.jpg",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"锁的优缺点对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁的优缺点对比"}},[t._v("#")]),t._v(" 锁的优缺点对比")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/e6c9d24ely1h0ynmv8nwtj21eo0bmjug.jpg",alt:""}})])])}),[],!1,null,null,null);a.default=_.exports}}]);