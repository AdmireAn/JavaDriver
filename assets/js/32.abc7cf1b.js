(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{533:function(t,n,s){"use strict";s.r(n);var a=s(21),v=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("code",[t._v("Lock")]),t._v(" 实现提供比使用 "),s("code",[t._v("synchronized")]),t._v(" 方法和语句可以获得的更广泛的锁定操作。 它们允许更灵活的结构化，可能具有完全不同的属性，并且可以支持多个相关联的对象Condition 。")]),t._v(" "),s("p",[t._v("虽然 "),s("code",[t._v("synchronized")]),t._v(" 方法和语句的范围机制使得使用监视器锁更容易编程，并且有助于避免涉及锁的许多常见编程错误，但是有时您需要以更灵活的方式处理锁。")]),t._v(" "),s("p",[t._v("例如，您获取节点A的锁定，然后获取节点B，然后释放A并获取C，然后释放B并获得D等。")]),t._v(" "),s("p",[t._v("所述的实施方式中Lock接口通过允许获得并在不同的范围释放的锁，并允许获得并以任何顺序释放多个锁使得能够使用这样的技术。")]),t._v(" "),s("h2",{attrs:{id:"lock-接口-vs-synchronized"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lock-接口-vs-synchronized"}},[t._v("#")]),t._v(" Lock 接口 VS "),s("code",[t._v("Synchronized")])]),t._v(" "),s("p",[t._v("Java SE 5之后，juc 包中增加了 Lock 接口，在此之前 Java 是靠 "),s("code",[t._v("Synchronized")]),t._v(" 关键字来实现锁功能的，二者具有相同的内存同步语义，区别如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[s("code",[t._v("Synchronized")])]),t._v(" "),s("th",[t._v("Lock接口")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("加锁、解锁")]),t._v(" "),s("td",[t._v("隐式的加锁、解锁")]),t._v(" "),s("td",[t._v("显式的加锁、解锁")])]),t._v(" "),s("tr",[s("td",[t._v("是否异常自动释放锁")]),t._v(" "),s("td",[t._v("是")]),t._v(" "),s("td",[t._v("不是，必须手动unlock来释放锁")])]),t._v(" "),s("tr",[s("td",[t._v("是否支持相应中断")]),t._v(" "),s("td",[t._v("只能等待锁的释放，不能响应中断")]),t._v(" "),s("td",[t._v("等待锁过程中可以用interrupt来中断等待")])]),t._v(" "),s("tr",[s("td",[t._v("适用场景")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("比如这种场景：先获得A锁，再获取B锁，获取到B锁释放A锁同时获取C锁，获得C锁后释放B锁在获取D锁。这种场景用"),s("code",[t._v("Synchronized")]),t._v("就不好实现了。")])])])]),t._v(" "),s("p",[t._v("Lock 相比于 "),s("code",[t._v("Synchronized")]),t._v("  还有如下特性：")]),t._v(" "),s("ul",[s("li",[t._v("尝试非阻塞获取锁")]),t._v(" "),s("li",[t._v("能被中断的获取锁")]),t._v(" "),s("li",[t._v("超时获取锁")])]),t._v(" "),s("h2",{attrs:{id:"lock-锁的常规用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lock-锁的常规用法"}},[t._v("#")]),t._v(" Lock 锁的常规用法")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// access the resource protected by this lock }")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"lock-锁的api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lock-锁的api"}},[t._v("#")]),t._v(" Lock 锁的API")]),t._v(" "),s("p",[t._v("Lock 接口定义了所得获取和释放的基本操作， Lock的API如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("void lock()")]),t._v(" "),s("td",[t._v("获得锁")])]),t._v(" "),s("tr",[s("td",[t._v("void lockInterruptibly()")]),t._v(" "),s("td",[t._v("获取锁定，除非当前线程是 interrupted 。")])]),t._v(" "),s("tr",[s("td",[t._v("Condition newCondition()")]),t._v(" "),s("td",[t._v("返回一个新Condition绑定到该实例Lock实例。")])]),t._v(" "),s("tr",[s("td",[t._v("boolean tryLock()")]),t._v(" "),s("td",[t._v("只有在调用时才可以获得锁。")])]),t._v(" "),s("tr",[s("td",[t._v("boolean tryLock(long time, TimeUnit unit)")]),t._v(" "),s("td",[t._v("如果在给定的等待时间内是空闲的，并且当前的线程尚未得到 interrupted，则获取该锁")])]),t._v(" "),s("tr",[s("td",[t._v("void unlock()")]),t._v(" "),s("td",[t._v("释放锁。")])])])])])}),[],!1,null,null,null);n.default=v.exports}}]);