(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{532:function(a,t,e){"use strict";e.r(t);var s=e(21),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"简述-cas-原理-什么是-aba-问题-怎么解决"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简述-cas-原理-什么是-aba-问题-怎么解决"}},[a._v("#")]),a._v(" 简述 CAS 原理，什么是 ABA 问题，怎么解决？")]),a._v(" "),e("h3",{attrs:{id:"cas实现原子操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cas实现原子操作"}},[a._v("#")]),a._v(" CAS实现原子操作")]),a._v(" "),e("p",[a._v("CAS理论是 juc 包实现的基石，在intel的CPU中，CAS 通过调用本地方法（JNI）使用cmpxchg指令来实现的非阻塞算法。对比于synchronized阻塞算法，基于 CAS 实现的 juc 在性能上有了很大的提升。")]),a._v(" "),e("p",[a._v("CAS 操作包含三个操作数 —— 内存位置（V）、预期原值（A）和新值(B)。 如果内存位置的值与预期原值相匹配，那么处理器会自动将该位置值更新为新值 。否则，处理器不做任何操作。")]),a._v(" "),e("h3",{attrs:{id:"aba问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aba问题"}},[a._v("#")]),a._v(" ABA问题")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("因为CAS需要在操作值的时候检查下值有没有发生变化，如果没有发生变化则更新，但是如果一个值原来是A，变成了B，又变成了A，那么使用CAS进行检查时会发现它的值没有发生变化，但是实际上却变化了。")])]),a._v(" "),e("li",[e("p",[a._v("ABA问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加一，那么A－B－A 就会变成1A-2B－3A。")])]),a._v(" "),e("li",[e("p",[a._v("从Java1.5开始JDK的atomic包里提供了一个类AtomicStampedReference来解决ABA问题。这个类的compareAndSet方法作用是首先检查当前引用是否等于预期引用，并且当前标志是否等于预期标志，如果全部相等，则以原子方式将该引用和该标志的值设置为给定的更新值。")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);