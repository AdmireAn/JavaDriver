(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{696:function(t,s,a){"use strict";a.r(s);var n=a(21),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkFKxmqgnjAzwgI3CZRq8EM4xr81s2ZzYjVmXicyc0hrcdpMKsjzicwiagA/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("h2",{attrs:{id:"_1-quartz"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-quartz"}},[t._v("#")]),t._v(" 1 Quartz")]),t._v(" "),a("p",[t._v("Quartz是一款Java开源任务调度框架，也是很多Java工程师接触任务调度的起点。")]),t._v(" "),a("p",[t._v("下图显示了任务调度的整体流程："),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AdmireAn/blobImage@main/img/640-20221110230843567.png",alt:"图片"}})]),t._v(" "),a("p",[t._v("Quartz的核心是三个组件。")]),t._v(" "),a("ul",[a("li",[t._v("任务：Job 用于表示被调度的任务；")]),t._v(" "),a("li",[t._v("触发器：Trigger 定义调度时间的元素，即按照什么时间规则去执行任务。一个Job可以被多个Trigger关联，但是一个Trigger 只能关联一个Job；")]),t._v(" "),a("li",[t._v("调度器 ：工厂类创建Scheduler，根据触发器定义的时间规则调度任务。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkN4fyCgtagiboxyqYQ6TAX6pZa3VjlSWib83xmRGF1oY1pcg86DN5E0Wg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("p",[t._v("上图代码中Quartz 的JobStore是 "),a("strong",[t._v("RAMJobStore")]),t._v("，Trigger 和 Job 存储在内存中。")]),t._v(" "),a("p",[t._v("执行任务调度的核心类是 "),a("strong",[t._v("QuartzSchedulerThread")]),t._v(" 。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkWIHsDvelX5EibkibeWiaWSIzzH4QhNW3oM4t4OXku6XbertGib0mHk90Cg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("ol",[a("li",[t._v("调度线程从JobStore中获取需要执行的的触发器列表，并修改触发器的状态；")]),t._v(" "),a("li",[a("strong",[t._v("Fire")]),t._v("触发器，修改触发器信息(下次执行触发器的时间，以及触发器状态），并存储起来。")]),t._v(" "),a("li",[t._v("最后创建具体的执行任务对象，通过worker线程池执行任务。")])]),t._v(" "),a("p",[t._v("接下来再聊聊 Quartz 的集群部署方案。")]),t._v(" "),a("p",[t._v("Quartz的集群部署方案，需要针对不同的数据库类型(MySQL ,  ORACLE) 在数据库实例上创建Quartz表，JobStore是:  "),a("strong",[t._v("JobStoreSupport")]),t._v(" 。")]),t._v(" "),a("p",[t._v("这种方案是分布式的，没有负责集中管理的节点，而是利用数据库行级锁的方式来实现集群环境下的并发控制。")]),t._v(" "),a("p",[t._v("scheduler实例在集群模式下首先获取{0}LOCKS表中的行锁，Mysql 获取行锁的语句：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxk74CibDY4vQgb5WoCtNKebF8nQmABWqxAiapnYFib9I2SHjxo7jNIo45jg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("p",[t._v("{0}会替换为配置文件默认配置的"),a("code",[t._v("QRTZ_")]),t._v("。sched_name为应用集群的实例名，lock_name就是行级锁名。Quartz主要有两个行级锁触发器访问锁 ("),a("strong",[t._v("TRIGGER_ACCESS")]),t._v(") 和 状态访问锁（"),a("strong",[t._v("STATE_ACCESS")]),t._v("）。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkRBg5e4wEE3JcianM8Y0ELkvTicpOKq6dIPAhQC3NgHErC3B6kh7dol7g/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("p",[t._v("这个架构解决了任务的分布式调度问题，同一个任务只能有一个节点运行，其他节点将不执行任务，当碰到大量短任务时，各个节点频繁的竞争数据库锁，节点越多性能就会越差。")]),t._v(" "),a("h2",{attrs:{id:"_2-分布式锁模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-分布式锁模式"}},[t._v("#")]),t._v(" 2 分布式锁模式")]),t._v(" "),a("p",[t._v("Quartz的集群模式可以水平扩展，也可以分布式调度，但需要业务方在数据库中添加对应的表，有一定的强侵入性。")]),t._v(" "),a("p",[t._v("有不少研发同学为了避免这种侵入性，也探索出"),a("strong",[t._v("分布式锁模式")]),t._v("。")]),t._v(" "),a("p",[t._v("业务场景：电商项目，用户下单后一段时间没有付款，系统就会在超时后关闭该订单。")]),t._v(" "),a("p",[t._v("通常我们会做一个定时任务每两分钟来检查前半小时的订单，将没有付款的订单列表查询出来，然后对订单中的商品进行库存的恢复，然后将该订单设置为无效。")]),t._v(" "),a("p",[t._v("我们使用Spring Schedule的方式做一个定时任务。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Scheduled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cron "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0 */2 * * * ? "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"定时任务启动"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行关闭订单的操作")]),t._v("\n   orderService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("closeExpireUnpayOrders")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"定时任务结束"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("在单服务器运行正常，考虑到高可用，业务量激增，架构会演进成集群模式，在"),a("strong",[t._v("同一时刻")]),t._v("有多个服务执行一个定时任务，有可能会导致业务紊乱。")]),t._v(" "),a("p",[t._v("解决方案是在任务执行的时候，使用Redis 分布式锁来解决这类问题。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Scheduled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cron "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0 */2 * * * ? "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"定时任务启动"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" lockName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"closeExpireUnpayOrdersLock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisLock")]),t._v(" redisLock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lockName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//尝试加锁，最多等待3秒，上锁以后5分钟自动解锁")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" locked "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisLock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("locked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"没有获得分布式锁:{}"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lockName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行关闭订单的操作")]),t._v("\n       orderService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("closeExpireUnpayOrders")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       redisLock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"定时任务结束"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkJjvlMHwySHEiboJFRGlCocTGS1q6M2fO0zWTTn8CB3cM0mT0xKE2Ehw/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("p",[t._v("Redis的读写性能极好，分布式锁也比Quartz数据库行级锁更轻量级。当然Redis锁也可以替换成Zookeeper锁，也是同样的机制。")]),t._v(" "),a("p",[t._v("在小型项目中，使用：定时任务框架（Quartz/Spring Schedule）和 分布式锁（redis/zookeeper）有不错的效果。")]),t._v(" "),a("p",[t._v("但是呢？我们可以发现这种组合有两个问题：")]),t._v(" "),a("ol",[a("li",[t._v("定时任务在分布式场景下有空跑的情况，而且任务也无法做到分片；")]),t._v(" "),a("li",[t._v("要想手工触发任务，必须添加额外的代码才能完成。")])]),t._v(" "),a("h2",{attrs:{id:"_3-elasticjob-lite-框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-elasticjob-lite-框架"}},[t._v("#")]),t._v(" 3 ElasticJob-Lite 框架")]),t._v(" "),a("p",[t._v("ElasticJob-Lite 定位为轻量级无中心化解决方案，使用 jar 的形式提供分布式任务的协调服务。"),a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkXgLyf42kzCbCTUGSqaOTygF1bjicjiaPMcjqdx3ichaAkX03m1P46GHKA/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("p",[t._v("应用内部定义任务类，实现SimpleJob接口，编写自己任务的实际业务流程即可。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public class MyElasticJob implements SimpleJob {\n    @Override\n    public void execute(ShardingContext context) {\n        switch (context.getShardingItem()) {\n            case 0:\n                // do something by sharding item 0\n                break;\n            case 1:\n                // do something by sharding item 1\n                break;\n            case 2:\n                // do something by sharding item 2\n                break;\n            // case n: ...\n        }\n    }\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[t._v("举例：应用A有五个任务需要执行，分别是A，B，C，D，E。任务E需要分成四个子任务，应用部署在两台机器上。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AdmireAn/blobImage@main/img/640-20221110231056787.png",alt:"图片"}})]),t._v(" "),a("p",[t._v("应用A在启动后， 5个任务通过 Zookeeper 协调后被分配到两台机器上，通过Quartz Scheduler 分开执行不同的任务。")]),t._v(" "),a("p",[t._v("ElasticJob 从本质上来讲 ，底层任务调度还是通过 Quartz ，相比Redis分布式锁 或者 Quartz 分布式部署 ，它的优势在于可以依赖 Zookeeper 这个大杀器 ，将任务通过负载均衡算法分配给应用内的 Quartz Scheduler容器。")]),t._v(" "),a("p",[t._v("从使用者的角度来讲，是非常简单易用的。但从架构来看，调度器和执行器依然在同一个应用方JVM内，而且容器在启动后，依然需要做负载均衡。应用假如频繁的重启，不断的去选主，对分片做负载均衡，这些都是相对比较"),a("strong",[t._v("重")]),t._v("的操作。")]),t._v(" "),a("p",[t._v("ElasticJob 的控制台通过读取注册中心数据展现作业状态，更新注册中心数据修改全局任务配置。从一个任务调度平台的角度来看，控制台功能还是偏孱弱的。")]),t._v(" "),a("h2",{attrs:{id:"_4-中心化流派"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-中心化流派"}},[t._v("#")]),t._v(" 4 中心化流派")]),t._v(" "),a("p",[t._v("中心化的原理是：把调度和任务执行，隔离成两个部分：调度中心和执行器。调度中心模块只需要负责任务调度属性，触发调度命令。执行器接收调度命令，去执行具体的业务逻辑，而且两者都可以进行分布式扩容。")]),t._v(" "),a("h3",{attrs:{id:"_4-1-mq模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-mq模式"}},[t._v("#")]),t._v(" 4.1 MQ模式")]),t._v(" "),a("p",[t._v("先谈谈我在艺龙促销团队接触的第一种中心化架构。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AdmireAn/blobImage@main/img/640-20221110231111215.png",alt:"图片"}})]),t._v(" "),a("p",[t._v("调度中心依赖Quartz集群模式，当任务调度时候，发送消息到RabbitMQ 。业务应用收到任务消息后，消费任务信息。")]),t._v(" "),a("p",[t._v("这种模型充分利用了MQ解耦的特性，调度中心发送任务，应用方作为执行器的角色，接收任务并执行。")]),t._v(" "),a("p",[t._v("但这种设计强依赖消息队列，可扩展性和功能，系统负载都和消息队列有极大的关联。这种架构设计需要架构师对消息队列非常熟悉。")]),t._v(" "),a("h3",{attrs:{id:"_4-2-xxl-job"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-xxl-job"}},[t._v("#")]),t._v(" 4.2 XXL-JOB")]),t._v(" "),a("blockquote",[a("p",[t._v("XXL-JOB 是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AdmireAn/blobImage@main/img/640-20221110231116737.png",alt:"图片"}}),t._v("xxl-job 2.3.0架构图")]),t._v(" "),a("p",[t._v("我们重点剖析下架构图 ：")]),t._v(" "),a("p",[a("strong",[t._v("▍ 网络通讯 server-worker 模型")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkMVMibCIVGzWfRUKeWTCMuUGanaNrvfFwVHnhF7289xDVTryYL8Yk7Bg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("p",[t._v("调度中心和执行器 两个模块之间通讯是 server-worker 模式。调度中心本身就是一个SpringBoot 工程，启动会监听8080端口。")]),t._v(" "),a("p",[t._v("执行器启动后，会启动内置服务（ EmbedServer ）监听9994端口。这样双方都可以给对方发送命令。")]),t._v(" "),a("p",[t._v("那调度中心如何知道执行器的地址信息呢 ？上图中，执行器会定时发送注册命令 ，这样调度中心就可以获取在线的执行器列表。")]),t._v(" "),a("p",[t._v("通过执行器列表，就可以根据任务配置的路由策略选择节点执行任务。常见的路由策略有如下三种：")]),t._v(" "),a("ul",[a("li",[t._v("随机节点执行：选择集群中一个可用的执行节点执行调度任务。适用场景：离线订单结算。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkpVHAJSotULt0eC28LDQXH0LuWEbX5BMMTPUicicRJibDqQSIKGEbaTtkg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("广播执行：在集群中所有的执行节点分发调度任务并执行。适用场景：批量更新应用本地缓存。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkqqqoKibxTjehXQrWhwPh9uLu7jn4RqoZlFLdkswNgZQIG1OiamOaqX6w/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})])]),t._v(" "),a("li",[a("p",[t._v("分片执行：按照用户自定义分片逻辑进行拆分，分发到集群中不同节点并行执行，提升资源利用效率。适用场景：海量日志统计。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxklDzNOcmYKPAYq9bRStekmvUkObnaXk7sTNz8vuXZdfJv0NkkyzZ0rg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("p",[a("strong",[t._v("▍ 调度器")])]),t._v(" "),a("p",[t._v("调度器是任务调度系统里面非常核心的组件。XXL-JOB 的早期版本是依赖Quartz。")]),t._v(" "),a("p",[t._v("但在v2.1.0版本中完全去掉了Quartz的依赖，原来需要创建的 Quartz表也替换成了自研的表。")]),t._v(" "),a("p",[t._v("核心的调度类是："),a("strong",[t._v("JobTriggerPoolHelper")]),t._v(" 。调用start方法后，会启动两个线程：scheduleThread 和 ringThread 。")]),t._v(" "),a("p",[t._v("首先 scheduleThread 会定时从数据库加载需要调度的任务，这里从本质上还是基于数据库行锁保证同时只有一个调度中心节点触发任务调度。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Connection conn = XxlJobAdminConfig.getAdminConfig()\n                  .getDataSource().getConnection();\nconnAutoCommit = conn.getAutoCommit();\nconn.setAutoCommit(false);\npreparedStatement = conn.prepareStatement(\n\"select * from xxl_job_lock where lock_name = 'schedule_lock' for update\");\npreparedStatement.execute();\n# 触发任务调度 (伪代码)\nfor (XxlJobInfo jobInfo: scheduleList) {\n  // 省略代码\n}\n# 事务提交\nconn.commit();\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("调度线程会根据任务的「下次触发时间」，采取不同的动作：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkywmk5bxTjkf0D0MibrRRYbsemJLfWhV2MbITCUNF7ZXg5scbH96cURg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("p",[t._v("已过期的任务需要立刻执行的，直接放入线程池中触发执行 ，五秒内需要执行的任务放到 ringData 对象里。")]),t._v(" "),a("p",[t._v("ringThread 启动后，定时从 ringData 对象里获取需要执行的任务列表 ，放入到线程池中触发执行。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxkYXjh5CfXXyeniaeyMskjlXlGgpZHnZa2d2mQ1ibfUn1bI9ic9tlxXbBbQ/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/V71JNV78n28FbCwZvgsvkxiacSKb4JYxktLNic5WSudeFbHfH1Kw2ESMGTatbWmZoURFy4Avdaj3icrtIc2ru2yug/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/BX-Hb2vf-BFcVV1sH2ZiYA",target:"_blank",rel:"noopener noreferrer"}},[t._v("定时任务"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);