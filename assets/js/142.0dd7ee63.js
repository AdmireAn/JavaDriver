(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{642:function(t,e,r){"use strict";r.r(e);var a=r(21),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("blockquote",[r("p",[t._v("索引本身也是以文件的形式存储在磁盘上，索引查找过程中存在I/O消耗，采用B tree结构可以减少I/O。")])]),t._v(" "),r("h2",{attrs:{id:"磁盘存取原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#磁盘存取原理"}},[t._v("#")]),t._v(" 磁盘存取原理")]),t._v(" "),r("blockquote",[r("p",[t._v("局部性原理与磁盘预读：当一个数据被用到时，其附近的数据也很快会被用到。\n预读的长度一般为页的整数倍，主存和磁盘以页为单位交换数据。")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/e6c9d24egy1h2ge1w8ijvj21260s2adu.jpg",alt:""}}),t._v("\n磁盘和磁头构成了存取物理结构。同心圆环是磁道，磁道被划分成一个个段，叫扇区，扇区是最小存储单元。\ni/o读取数据的过程：磁盘旋转到指定扇区，磁头移动到指定磁道。\n所以减少磁盘旋转或者减少磁头移动就能减少i/o。")]),t._v(" "),r("h2",{attrs:{id:"b-tree索引的性能分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#b-tree索引的性能分析"}},[t._v("#")]),t._v(" B-/+Tree索引的性能分析")]),t._v(" "),r("p",[t._v("B Tree利用局部性原理可减少i/o次数。\n根据B Tree定义可知，检索一次最多需要访问h个节点，h-1次i/o，h是树高，mysql设计者巧妙的将一个节点大小设置为等于一个页大小，每次新建节点都申请一个页的空间，这样就保证一个节点物理上也存储在一个页，这样每个节点只需要一次i/o就可以完全载入。")])])}),[],!1,null,null,null);e.default=s.exports}}]);