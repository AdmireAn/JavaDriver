(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{597:function(t,a,s){"use strict";s.r(a);var e=s(21),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("进程同步与进程通信很容易混淆，它们的区别在于：")]),t._v(" "),s("ul",[s("li",[t._v("进程同步：控制多个进程按一定顺序执行；")]),t._v(" "),s("li",[t._v("进程通信：进程间传输信息。")])]),t._v(" "),s("p",[t._v("进程通信是一种手段，而进程同步是一种目的。也可以说，为了能够达到进程同步的目的，需要让进程进行通信，传输一些进程同步所需要的信息。")]),t._v(" "),s("h2",{attrs:{id:"管道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#管道"}},[t._v("#")]),t._v(" 管道")]),t._v(" "),s("p",[t._v("管道是通过调用 pipe 函数创建的，fd[0] 用于读，fd[1] 用于写。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#include <unistd.h>\nint pipe(int fd[2]);\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("它具有以下限制：")]),t._v(" "),s("ul",[s("li",[t._v("只支持半双工通信（单向交替传输）；")]),t._v(" "),s("li",[t._v("只能在父子进程或者兄弟进程中使用。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AdmireAn/blobImage@main/img/20221008224734.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_2-fifo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-fifo"}},[t._v("#")]),t._v(" 2. FIFO")]),t._v(" "),s("p",[t._v("也称为命名管道，去除了管道只能在父子进程中使用的限制。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#include <sys/stat.h>\nint mkfifo(const char *path, mode_t mode);\nint mkfifoat(int fd, const char *path, mode_t mode);\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("FIFO 常用于客户-服务器应用程序中，FIFO 用作汇聚点，在客户进程和服务器进程之间传递数据。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AdmireAn/blobImage@main/img/20221008224910.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_3-消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-消息队列"}},[t._v("#")]),t._v(" 3. 消息队列")]),t._v(" "),s("p",[t._v("相比于 FIFO，消息队列具有以下优点：")]),t._v(" "),s("p",[t._v("消息队列可以独立于读写进程存在，从而避免了 FIFO 中同步管道的打开和关闭时可能产生的困难；\n避免了 FIFO 的同步阻塞问题，不需要进程自己提供同步方法；\n读进程可以根据消息类型有选择地接收消息，而不像 FIFO 那样只能默认地接收。")]),t._v(" "),s("h2",{attrs:{id:"_4-信号量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-信号量"}},[t._v("#")]),t._v(" 4. 信号量")]),t._v(" "),s("p",[t._v("它是一个计数器，用于为多个进程提供对共享数据对象的访问。")]),t._v(" "),s("h2",{attrs:{id:"_5-共享存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-共享存储"}},[t._v("#")]),t._v(" 5. 共享存储")]),t._v(" "),s("p",[t._v("允许多个进程共享一个给定的存储区。因为数据不需要在进程之间复制，所以这是最快的一种 IPC。")]),t._v(" "),s("p",[t._v("需要使用信号量用来同步对共享存储的访问。")]),t._v(" "),s("p",[t._v("多个进程可以将同一个文件映射到它们的地址空间从而实现共享内存。另外 XSI 共享内存不是使用文件，而是使用内存的匿名段。")]),t._v(" "),s("h2",{attrs:{id:"_6-套接字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-套接字"}},[t._v("#")]),t._v(" 6. 套接字")]),t._v(" "),s("p",[t._v("与其它通信机制不同的是，它可用于不同机器间的进程通信。")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.cyc2018.xyz/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86.html#_2-fifo",target:"_blank",rel:"noopener noreferrer"}},[t._v("进程通信"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);