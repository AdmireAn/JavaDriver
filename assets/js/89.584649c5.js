(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{591:function(s,o,e){"use strict";e.r(o);var i=e(21),n=Object(i.a)({},(function(){var s=this,o=s.$createElement,e=s._self._c||o;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"什么是认证-authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是认证-authentication"}},[s._v("#")]),s._v(" 什么是认证（Authentication）")]),s._v(" "),e("p",[s._v("通俗地讲就是验证当前用户的身份，证明“你是你自己”（比如：你每天上下班打卡，都需要通过指纹打卡，当你的指纹和系统里录入的指纹相匹配时，就打卡成功）\n互联网中的认证：")]),s._v(" "),e("ul",[e("li",[s._v("用户名密码登录")]),s._v(" "),e("li",[s._v("邮箱发送登录链接")]),s._v(" "),e("li",[s._v("手机号接收验证码")]),s._v(" "),e("li",[s._v("只要你能收到邮箱/验证码，就默认你是账号的主人")])]),s._v(" "),e("h2",{attrs:{id:"什么是授权-authorization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是授权-authorization"}},[s._v("#")]),s._v(" 什么是授权（Authorization）")]),s._v(" "),e("p",[s._v("用户授予第三方应用访问该用户某些资源的权限")]),s._v(" "),e("ul",[e("li",[s._v("你在安装手机应用的时候，APP 会询问是否允许授予权限（访问相册、地理位置等权限）")]),s._v(" "),e("li",[s._v("你在访问微信小程序时，当登录时，小程序会询问是否允许授予权限（获取昵称、头像、地区、性别等个人信息）")]),s._v(" "),e("li",[s._v("实现授权的方式有：cookie、session、token、OAuth")])]),s._v(" "),e("h2",{attrs:{id:"什么是凭证-credentials"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是凭证-credentials"}},[s._v("#")]),s._v(" 什么是凭证（Credentials）")]),s._v(" "),e("p",[s._v("实现认证和授权的前提是需要一种媒介（证书） 来标记访问者的身份")]),s._v(" "),e("ul",[e("li",[s._v("在战国时期，商鞅变法，发明了照身帖。照身帖由官府发放，是一块打磨光滑细密的竹板，上面刻有持有人的头像和籍贯信息。国人必须持有，如若没有就被认为是黑户，或者间谍之类的。")]),s._v(" "),e("li",[s._v("在现实生活中，每个人都会有一张专属的居民身份证，是用于证明持有人身份的一种法定证件。通过身份证，我们可以办理手机卡/银行卡/个人贷款/交通出行等等，这就是认证的凭证。")]),s._v(" "),e("li",[s._v("在互联网应用中，一般网站（如掘金）会有两种模式，游客模式和登录模式。游客模式下，可以正常浏览网站上面的文章，一旦想要点赞/收藏/分享文章，就需要登录或者注册账号。当用户登录成功后，服务器会给该用户使用的浏览器颁发一个令牌（token），这个令牌用来表明你的身份，每次浏览器发送请求时会带上这个令牌，就可以使用游客模式下无法使用的功能。")])]),s._v(" "),e("h2",{attrs:{id:"什么是-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-cookie"}},[s._v("#")]),s._v(" 什么是 Cookie")]),s._v(" "),e("ul",[e("li",[s._v("HTTP 是无状态的协议（对于事务处理没有记忆能力，每次客户端和服务端会话完成时，服务端不会保存任何会话信息）：每个请求都是完全独立的，服务端无法确认当前访问者的身份信息，无法分辨上一次的请求发送者和这一次的发送者是不是同一个人。所以服务器与浏览器为了进行会话跟踪（知道是谁在访问我），就必须主动的去维护一个状态，这个状态用于告知服务端前后两个请求是否来自同一浏览器。而这个状态需要通过 cookie 或者 session 去实现。")]),s._v(" "),e("li",[s._v("cookie 存储在客户端： cookie 是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。\ncookie 是不可跨域的： 每个 cookie 都会绑定单一的域名，无法在别的域名下获取使用，一级域名和二级域名之间是允许共享使用的（靠的是 domain）。")])]),s._v(" "),e("h2",{attrs:{id:"什么是-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-session"}},[s._v("#")]),s._v(" 什么是 Session")]),s._v(" "),e("ul",[e("li",[s._v("session 是另一种记录服务器和客户端会话状态的机制")]),s._v(" "),e("li",[s._v("session 是基于 cookie 实现的，session 存储在服务器端，sessionId 会被存储到客户端的cookie 中")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://tva1.sinaimg.cn/large/e6c9d24ely1h6iugvfty7j20hs0cu0t1.jpg",alt:""}})]),s._v(" "),e("p",[s._v("session 认证流程：")]),s._v(" "),e("ul",[e("li",[s._v("用户第一次请求服务器的时候，服务器根据用户提交的相关信息，创建对应的 Session")]),s._v(" "),e("li",[s._v("请求返回时将此 Session 的唯一标识信息 SessionID 返回给浏览器")]),s._v(" "),e("li",[s._v("浏览器接收到服务器返回的 SessionID 信息后，会将此信息存入到 Cookie 中，同时 Cookie 记录此 SessionID 属于哪个域名")]),s._v(" "),e("li",[s._v("当用户第二次访问服务器的时候，请求会自动判断此域名下是否存在 Cookie 信息，如果存在自动将 Cookie 信息也发送给服务端，服务端会从 Cookie 中获取 SessionID，再根据 SessionID 查找对应的 Session 信息，如果没有找到说明用户没有登录或者登录失效，如果找到 Session 证明用户已经登录可执行后面操作。")])]),s._v(" "),e("p",[s._v("根据以上流程可知，SessionID 是连接 Cookie 和 Session 的一道桥梁，大部分系统也是根据此原理来验证用户登录状态。")]),s._v(" "),e("h2",{attrs:{id:"二-cookie和session的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-cookie和session的区别"}},[s._v("#")]),s._v(" 二：Cookie和Session的区别？")]),s._v(" "),e("p",[s._v("存储位置不同：cookie保存在客户端浏览器，session保存在服务器端；")]),s._v(" "),e("p",[s._v("存取方式不同：cookie只能保存ASCII（是基于拉丁字母的一套电脑编码系统），session能保存任意数据类型；")]),s._v(" "),e("p",[s._v("有效期不同：cookie中的数据可以长时间存在，session中的数据在会话结束或者浏览器关闭时失效；")]),s._v(" "),e("p",[s._v("数据安全性不同：因为cookie是保存在浏览器中的，数据安全性相对较差；session是存储在服务器端的，安全性相对较高；")]),s._v(" "),e("p",[s._v("存储大小不同：cookie一般保存的数据大小不会超过4K；而session理论上来说没有限制；")]),s._v(" "),e("h2",{attrs:{id:"三-为什么需要cookie和session-它们的联系是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-为什么需要cookie和session-它们的联系是什么"}},[s._v("#")]),s._v(" 三：为什么需要Cookie和Session，它们的联系是什么？")]),s._v(" "),e("p",[s._v("因为浏览器是无状态的（http协议是无状态），浏览器并不知道是谁在跟服务器联系，这个时候就需要一个机制来告诉服务器，是谁在操作浏览器，操作人是否登录等，要实现这个机制，就需要cookie和session配合完成；")]),s._v(" "),e("p",[s._v("当用户第一次访问服务器时，服务器会根据用户提交的信息生成session，然后给浏览器返回一个sessionId，浏览器接收到这个sessionId后，保存在cookie中，同时cookie记录此sessionId属于哪个域名；")]),s._v(" "),e("p",[s._v("用户再次访问服务器时，请求会自动判断此域名下是否用cookie信息，如果存在cookie，则将cookie发送给服务器，服务器解析cookie拿到sessionId，然后根据sessionId查询session信息，如果能找到session信息，则可以执行后面的操作，如果没有则说明没有登录或者登录已经失效；")]),s._v(" "),e("p",[s._v("sessionId是联系cookie和session的桥梁，大部分系统也是通过这个来判断用户是否登录；")]),s._v(" "),e("h2",{attrs:{id:"四-如果浏览器禁止使用cookie-那如何保证判断用户是否登录的机制正常执行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-如果浏览器禁止使用cookie-那如何保证判断用户是否登录的机制正常执行"}},[s._v("#")]),s._v(" 四：如果浏览器禁止使用cookie，那如何保证判断用户是否登录的机制正常执行？")]),s._v(" "),e("p",[s._v("第一种方案，每次请求中都携带一个 SessionID 的参数，也可以 Post 的方式提交，也可以在请求的地址后面拼接 xxx?SessionID=123456...。")]),s._v(" "),e("p",[s._v("第二种方案，Token 机制。Token 机制多用于 App 客户端和服务器交互的模式，也可以用于 Web 端做用户状态管理。")]),s._v(" "),e("p",[s._v("Token 的意思是“令牌”，是服务端生成的一串字符串，作为客户端进行请求的一个标识。Token 机制和 Cookie 和 Session 的使用机制比较类似。")]),s._v(" "),e("p",[s._v("当用户第一次登录后，服务器根据提交的用户信息生成一个 Token，响应时将 Token 返回给客户端，以后客户端只需带上这个 Token 前来请求数据即可，无需再次登录验证。")]),s._v(" "),e("h2",{attrs:{id:"五-如何考虑分布式-session-问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五-如何考虑分布式-session-问题"}},[s._v("#")]),s._v(" 五：如何考虑分布式 Session 问题？")]),s._v(" "),e("p",[s._v("在互联网公司为了可以支撑更大的流量，后端往往需要多台服务器共同来支撑前端用户请求，那如果用户在 A 服务器登录了，第二次请求跑到服务 B 就会出现登录失效问题。")]),s._v(" "),e("p",[s._v("分布式 Session 一般会有以下几种解决方案：")]),s._v(" "),e("p",[s._v("Nginx ip_hash 策略，服务端使用 Nginx 代理，每个请求按访问 IP 的 hash 分配，这样来自同一 IP 固定访问一个后台服务器，避免了在服务器 A 创建 Session，第二次分发到服务器 B 的现象。")]),s._v(" "),e("p",[s._v("Session 复制，任何一个服务器上的 Session 发生改变（增删改），该节点会把这个 Session 的所有内容序列化，然后广播给所有其它节点。")]),s._v(" "),e("p",[s._v("共享 Session，服务端无状态话，将用户的 Session 等信息使用缓存中间件来统一管理，保障分发到每一个服务器的响应结果都一致。")]),s._v(" "),e("p",[s._v("建议采用第三种方案。")]),s._v(" "),e("p",[s._v("参考：\n"),e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/164696755",target:"_blank",rel:"noopener noreferrer"}},[s._v("还分不清 Cookie、Session、Token、JWT？"),e("OutboundLink")],1)])])}),[],!1,null,null,null);o.default=n.exports}}]);