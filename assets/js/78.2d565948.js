(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{580:function(t,l,v){"use strict";v.r(l);var _=v(21),n=Object(_.a)({},(function(){var t=this,l=t.$createElement,v=t._self._c||l;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("基本的思想：模拟tcp的可靠机制来实现,保证四个无即可（无丢失、无失序、无错误、无重复）\n可以从以下几点着手：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("①加上序号")])]),t._v(" "),v("li",[v("p",[t._v("②确认机制，超时重传")])]),t._v(" "),v("li",[v("p",[t._v("③校验机制，出错重传")])])]),t._v(" "),v("p",[t._v("我们都知道UDP是面向无连接，不可靠的传输方式，而TCP虽然是面向连接，可靠地连接，但是其过程太繁琐，效率太低，传输速度很慢，所以我们可以利用UDP进行底层传输数据，上层进行封装，来弥补UDP的不足。\n做到以下4点，就可以保证UDP协议可靠：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("①不要TCP的三次握手和四次挥手。")])]),t._v(" "),v("li",[v("p",[t._v("②发送方每次发出的数据进行编号，同时保持顺序的正确。")])]),t._v(" "),v("li",[v("p",[t._v("③每次接收方接收到数据，发出应答信号。同时发送方在规定的时间检测是否接收到应答，如果没有接收到应答，重发，三次后还未收到应答直接判断发送失败。")])]),t._v(" "),v("li",[v("p",[t._v("④发送数据时，发送方增加校验位。如果接收方校验出错，请求重发。")])])])])}),[],!1,null,null,null);l.default=n.exports}}]);