(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{665:function(s,n,t){"use strict";t.r(n);var a=t(21),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[s._v("#")]),s._v(" 集群")]),s._v(" "),t("blockquote",[t("p",[s._v("集群是redis的分布式数据库方案。通过分片实现数据共享。提供复制和故障转移功能。")])]),s._v(" "),t("div",{staticClass:"language-c++ line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 保存连接节点所需的有关信息\ntypedef struct clusterLink {\n\n    // 连接的创建时间\n    mstime_t ctime;             /* Link creation time */\n\n    // TCP 套接字描述符\n    int fd;                     /* TCP socket file descriptor */\n\n    // 输出缓冲区，保存着等待发送给其他节点的消息（message）。\n    sds sndbuf;                 /* Packet send buffer */\n\n    // 输入缓冲区，保存着从其他节点接收到的消息。\n    sds rcvbuf;                 /* Packet reception buffer */\n\n    // 与这个连接相关联的节点，如果没有的话就为 NULL\n    struct clusterNode *node;   /* Node related to this link if any, or NULL */\n\n} clusterLink;\n\n// 节点状态\nstruct clusterNode {\n\n    // 创建节点的时间\n    mstime_t ctime; /* Node object creation time. */\n\n    // 节点的名字，由 40 个十六进制字符组成\n    // 例如 68eef66df23420a5862208ef5b1a7005b806f2ff\n    char name[REDIS_CLUSTER_NAMELEN]; /* Node name, hex string, sha1-size */\n\n    // 节点标识\n    // 使用各种不同的标识值记录节点的角色（比如主节点或者从节点），\n    // 以及节点目前所处的状态（比如在线或者下线）。\n    int flags;      /* REDIS_NODE_... */\n\n    // 节点当前的配置纪元，用于实现故障转移\n    uint64_t configEpoch; /* Last configEpoch observed for this node */\n\n    // 由这个节点负责处理的槽\n    // 一共有 REDIS_CLUSTER_SLOTS / 8 个字节长\n    // 每个字节的每个位记录了一个槽的保存状态\n    // 位的值为 1 表示槽正由本节点处理，值为 0 则表示槽并非本节点处理\n    // 比如 slots[0] 的第一个位保存了槽 0 的保存情况\n    // slots[0] 的第二个位保存了槽 1 的保存情况，以此类推\n    unsigned char slots[REDIS_CLUSTER_SLOTS/8]; /* slots handled by this node */\n\n    // 该节点负责处理的槽数量\n    int numslots;   /* Number of slots handled by this node */\n\n    // 如果本节点是主节点，那么用这个属性记录从节点的数量\n    int numslaves;  /* Number of slave nodes, if this is a master */\n\n    // 指针数组，指向各个从节点\n    struct clusterNode **slaves; /* pointers to slave nodes */\n\n    // 如果这是一个从节点，那么指向主节点\n    struct clusterNode *slaveof; /* pointer to the master node */\n\n    // 最后一次发送 PING 命令的时间\n    mstime_t ping_sent;      /* Unix time we sent latest ping */\n\n    // 最后一次接收 PONG 回复的时间戳\n    mstime_t pong_received;  /* Unix time we received the pong */\n\n    // 最后一次被设置为 FAIL 状态的时间\n    mstime_t fail_time;      /* Unix time when FAIL flag was set */\n\n    // 最后一次给某个从节点投票的时间\n    mstime_t voted_time;     /* Last time we voted for a slave of this master */\n\n    // 最后一次从这个节点接收到复制偏移量的时间\n    mstime_t repl_offset_time;  /* Unix time we received offset for this node */\n\n    // 这个节点的复制偏移量\n    long long repl_offset;      /* Last known repl offset for this node. */\n\n    // 节点的 IP 地址\n    char ip[REDIS_IP_STR_LEN];  /* Latest known IP address of this node */\n\n    // 节点的端口号\n    int port;                   /* Latest known port of this node */\n\n    // 保存连接节点所需的有关信息\n    clusterLink *link;          /* TCP/IP link with this node */\n\n    // 一个链表，记录了所有其他节点对该节点的下线报告\n    list *fail_reports;         /* List of nodes signaling this as failing */\n\n};\ntypedef struct clusterNode clusterNode;\n\n\n// 集群状态，每个节点都保存着一个这样的状态，记录了它们眼中的集群的样子。\n// 另外，虽然这个结构主要用于记录集群的属性，但是为了节约资源，\n// 有些与节点有关的属性，比如 slots_to_keys 、 failover_auth_count \n// 也被放到了这个结构里面。\ntypedef struct clusterState {\n\n    // 指向当前节点的指针\n    clusterNode *myself;  /* This node */\n\n    // 集群当前的配置纪元，用于实现故障转移\n    uint64_t currentEpoch;\n\n    // 集群当前的状态：是在线还是下线\n    int state;            /* REDIS_CLUSTER_OK, REDIS_CLUSTER_FAIL, ... */\n\n    // 集群中至少处理着一个槽的节点的数量。\n    int size;             /* Num of master nodes with at least one slot */\n\n    // 集群节点名单（包括 myself 节点）\n    // 字典的键为节点的名字，字典的值为 clusterNode 结构\n    dict *nodes;          /* Hash table of name -> clusterNode structures */\n\n    // 节点黑名单，用于 CLUSTER FORGET 命令\n    // 防止被 FORGET 的命令重新被添加到集群里面\n    // （不过现在似乎没有在使用的样子，已废弃？还是尚未实现？）\n    dict *nodes_black_list; /* Nodes we don't re-add for a few seconds. */\n\n    // 记录要从当前节点迁移到目标节点的槽，以及迁移的目标节点\n    // migrating_slots_to[i] = NULL 表示槽 i 未被迁移\n    // migrating_slots_to[i] = clusterNode_A 表示槽 i 要从本节点迁移至节点 A\n    clusterNode *migrating_slots_to[REDIS_CLUSTER_SLOTS];\n\n    // 记录要从源节点迁移到本节点的槽，以及进行迁移的源节点\n    // importing_slots_from[i] = NULL 表示槽 i 未进行导入\n    // importing_slots_from[i] = clusterNode_A 表示正从节点 A 中导入槽 i\n    clusterNode *importing_slots_from[REDIS_CLUSTER_SLOTS];\n\n    // 负责处理各个槽的节点\n    // 例如 slots[i] = clusterNode_A 表示槽 i 由节点 A 处理\n    clusterNode *slots[REDIS_CLUSTER_SLOTS];\n\n    // 跳跃表，表中以槽作为分值，键作为成员，对槽进行有序排序\n    // 当需要对某些槽进行区间（range）操作时，这个跳跃表可以提供方便\n    // 具体操作定义在 db.c 里面\n    zskiplist *slots_to_keys;\n\n    /* The following fields are used to take the slave state on elections. */\n    // 以下这些域被用于进行故障转移选举\n\n    // 上次执行选举或者下次执行选举的时间\n    mstime_t failover_auth_time; /* Time of previous or next election. */\n\n    // 节点获得的投票数量\n    int failover_auth_count;    /* Number of votes received so far. */\n\n    // 如果值为 1 ，表示本节点已经向其他节点发送了投票请求\n    int failover_auth_sent;     /* True if we already asked for votes. */\n\n    int failover_auth_rank;     /* This slave rank for current auth request. */\n\n    uint64_t failover_auth_epoch; /* Epoch of the current election. */\n\n    /* Manual failover state in common. */\n    /* 共用的手动故障转移状态 */\n\n    // 手动故障转移执行的时间限制\n    mstime_t mf_end;            /* Manual failover time limit (ms unixtime).\n                                   It is zero if there is no MF in progress. */\n    /* Manual failover state of master. */\n    /* 主服务器的手动故障转移状态 */\n    clusterNode *mf_slave;      /* Slave performing the manual failover. */\n    /* Manual failover state of slave. */\n    /* 从服务器的手动故障转移状态 */\n    long long mf_master_offset; /* Master offset the slave needs to start MF\n                                   or zero if stil not received. */\n    // 指示手动故障转移是否可以开始的标志值\n    // 值为非 0 时表示各个主服务器可以开始投票\n    int mf_can_start;           /* If non-zero signal that the manual failover\n                                   can start requesting masters vote. */\n\n    /* The followign fields are uesd by masters to take state on elections. */\n    /* 以下这些域由主服务器使用，用于记录选举时的状态 */\n\n    // 集群最后一次进行投票的纪元\n    uint64_t lastVoteEpoch;     /* Epoch of the last vote granted. */\n\n    // 在进入下个事件循环之前要做的事情，以各个 flag 来记录\n    int todo_before_sleep; /* Things to do in clusterBeforeSleep(). */\n\n    // 通过 cluster 连接发送的消息数量\n    long long stats_bus_messages_sent;  /* Num of msg sent via cluster bus. */\n\n    // 通过 cluster 接收到的消息数量\n    long long stats_bus_messages_received; /* Num of msg rcvd via cluster bus.*/\n\n} clusterState;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br"),t("span",{staticClass:"line-number"},[s._v("143")]),t("br"),t("span",{staticClass:"line-number"},[s._v("144")]),t("br"),t("span",{staticClass:"line-number"},[s._v("145")]),t("br"),t("span",{staticClass:"line-number"},[s._v("146")]),t("br"),t("span",{staticClass:"line-number"},[s._v("147")]),t("br"),t("span",{staticClass:"line-number"},[s._v("148")]),t("br"),t("span",{staticClass:"line-number"},[s._v("149")]),t("br"),t("span",{staticClass:"line-number"},[s._v("150")]),t("br"),t("span",{staticClass:"line-number"},[s._v("151")]),t("br"),t("span",{staticClass:"line-number"},[s._v("152")]),t("br"),t("span",{staticClass:"line-number"},[s._v("153")]),t("br"),t("span",{staticClass:"line-number"},[s._v("154")]),t("br"),t("span",{staticClass:"line-number"},[s._v("155")]),t("br"),t("span",{staticClass:"line-number"},[s._v("156")]),t("br"),t("span",{staticClass:"line-number"},[s._v("157")]),t("br"),t("span",{staticClass:"line-number"},[s._v("158")]),t("br"),t("span",{staticClass:"line-number"},[s._v("159")]),t("br"),t("span",{staticClass:"line-number"},[s._v("160")]),t("br"),t("span",{staticClass:"line-number"},[s._v("161")]),t("br"),t("span",{staticClass:"line-number"},[s._v("162")]),t("br"),t("span",{staticClass:"line-number"},[s._v("163")]),t("br"),t("span",{staticClass:"line-number"},[s._v("164")]),t("br"),t("span",{staticClass:"line-number"},[s._v("165")]),t("br"),t("span",{staticClass:"line-number"},[s._v("166")]),t("br"),t("span",{staticClass:"line-number"},[s._v("167")]),t("br"),t("span",{staticClass:"line-number"},[s._v("168")]),t("br"),t("span",{staticClass:"line-number"},[s._v("169")]),t("br"),t("span",{staticClass:"line-number"},[s._v("170")]),t("br"),t("span",{staticClass:"line-number"},[s._v("171")]),t("br"),t("span",{staticClass:"line-number"},[s._v("172")]),t("br"),t("span",{staticClass:"line-number"},[s._v("173")]),t("br"),t("span",{staticClass:"line-number"},[s._v("174")]),t("br"),t("span",{staticClass:"line-number"},[s._v("175")]),t("br"),t("span",{staticClass:"line-number"},[s._v("176")]),t("br"),t("span",{staticClass:"line-number"},[s._v("177")]),t("br"),t("span",{staticClass:"line-number"},[s._v("178")]),t("br"),t("span",{staticClass:"line-number"},[s._v("179")]),t("br"),t("span",{staticClass:"line-number"},[s._v("180")]),t("br"),t("span",{staticClass:"line-number"},[s._v("181")]),t("br"),t("span",{staticClass:"line-number"},[s._v("182")]),t("br"),t("span",{staticClass:"line-number"},[s._v("183")]),t("br"),t("span",{staticClass:"line-number"},[s._v("184")]),t("br"),t("span",{staticClass:"line-number"},[s._v("185")]),t("br"),t("span",{staticClass:"line-number"},[s._v("186")]),t("br"),t("span",{staticClass:"line-number"},[s._v("187")]),t("br"),t("span",{staticClass:"line-number"},[s._v("188")]),t("br")])]),t("p",[s._v("[外链图片转存中...(img-pyfo5Uy7-1653145947299)]")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("cluster meet命令")])]),s._v(" "),t("blockquote",[t("p",[s._v("客户端向节点A发送meet命令，指定节点B的ip和端口。将B加入到A的集群。")])]),s._v(" "),t("ul",[t("li",[s._v("向A发命令cluster meet B.")]),s._v(" "),t("li",[s._v("A为B创建一个clusterNode结构并保存在dict中")]),s._v(" "),t("li",[s._v("A向B发一个meet消息")]),s._v(" "),t("li",[s._v("B为A创建一个clusterNode结构并保存在dict中")]),s._v(" "),t("li",[s._v("B返回A一个PONG消息")]),s._v(" "),t("li",[s._v("A收到PONG返回一个PING")]),s._v(" "),t("li",[s._v("B收到PING，握手结束\n[外链图片转存中...(img-MJB1V7if-1653145947300)]")])]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("槽指派")])]),s._v(" "),t("blockquote",[t("p",[s._v("redis通过分片的方式保存键值对，集群的整个数据库被分成16384个槽。每个节点处理一定数量的槽，每个key一定属于其中一个槽。")])]),s._v(" "),t("ul",[t("li",[s._v("向节点指派槽的命令：cluster addslots 1 2 3 4")]),s._v(" "),t("li",[s._v("clusterNode中Slots数组保存当前节点所有槽信息。Slots是二进制数组。")]),s._v(" "),t("li",[s._v("传播节点的槽指派信息：集群节点会相互发送自己被指派的槽，节点收到其他几点的槽信息会更新相应的dict中的clusterNode结构。")]),s._v(" "),t("li",[s._v("clusterState中Slots数组保存所有槽信息。\n[外链图片转存中...(img-p5szUZKB-1653145947300)]")]),s._v(" "),t("li",[s._v("cluster addslots 1 2 3 4的实现：首先遍历clusterState的Slots判断命令中的槽还没有被指派。然后遍历命令中的槽，设置clusterState的Slots和clusterNode的slots。")])]),s._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[s._v("集群中执行命令")])]),s._v(" "),t("ul",[t("li",[s._v("接收命令的节点计算命令要处理的数据库属于哪个槽，如果是指派给自己的就直接执行；如果不是就向客户端返回一个moved错误指引客户端至正确节点执行。")]),s._v(" "),t("li",[s._v("计算给定key的槽：任何一个key通过这个算法就可以得出一个介于0-16383之间的槽。crc16(key)&16383")]),s._v(" "),t("li",[s._v("集群中的节点只能使用0号数据库。")])]),s._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[s._v("重新分片\n集群管理软件redis-trib负责执行。")])]),s._v(" "),t("ul",[t("li",[s._v("redis-trib向目标节点发送导入命令，并将slot指向目标节点")]),s._v(" "),t("li",[s._v("redis-trib向源节点发送导出命令")]),s._v(" "),t("li",[s._v("redis-trib从源节点获取导出slot的键，导入到目标节点")]),s._v(" "),t("li",[s._v("键迁移结束。向集群中任意节点发送消息，slot已指向目标节点。\n[外链图片转存中...(img-dezJf9DD-1653145947300)]")])]),s._v(" "),t("ol",{attrs:{start:"6"}},[t("li",[s._v("ask错误")])]),s._v(" "),t("ul",[t("li",[s._v("ask错误：正在被转移的key被查询时，会发生查询转移")]),s._v(" "),t("li",[s._v("Cluster setslot importing命令：clusterState的Importing_lots_from记录着导入的槽")]),s._v(" "),t("li",[s._v("Cluster setslot migrating命令:clusterState的migrating_slots_to记录着正在导出的槽。ask错误的实现")])]),s._v(" "),t("ol",{attrs:{start:"7"}},[t("li",[s._v("publish的实现")])]),s._v(" "),t("blockquote",[t("p",[s._v("不是直接向所有节点广播，而是通过一个节点向所有节点广播。因为redis中有一个潜规则：各节点通过消息通信。")])]),s._v(" "),t("div",{staticClass:"language-c++ line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("typedef struct {\n\n    // 频道名长度\n    uint32_t channel_len;\n\n    // 消息长度\n    uint32_t message_len;\n\n    // 消息内容，格式为 频道名+消息\n    // bulk_data[0:channel_len-1] 为频道名\n    // bulk_data[channel_len:channel_len+message_len-1] 为消息\n    unsigned char bulk_data[8]; /* defined as 8 just for alignment concerns. */\n\n} clusterMsgDataPublish;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h2",{attrs:{id:"复制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#复制"}},[s._v("#")]),s._v(" 复制")]),s._v(" "),t("ol",[t("li",[s._v("复制的步骤")])]),s._v(" "),t("ul",[t("li",[s._v("redis的复制分为两个步骤，同步（sync）和命令传播(commond propogate)。")]),s._v(" "),t("li",[s._v("同步：从服务器向主服务器发送sync命令，主服务器生成rdb文件，并将生成rdb期间的数据库修改命令保存在缓冲区，然后都传给从服务器。同步浪费资源体现在：a.生成rdb耗费cpu，内存，i/o;b.传输rdb耗费网络资源；c.载入rdb会阻塞服务器。")]),s._v(" "),t("li",[s._v("命令传播：主服务器收到的修改命令也发给从服务器执行。")]),s._v(" "),t("li",[s._v("redis2.8以前的复制缺陷：缺陷场景：主从断线之后的重新复制。实现方式：断线之后，主从重新走一遍同步和命令传播。缺陷原因：同步是很浪费资源的操作，应该尽量避免。")]),s._v(" "),t("li",[s._v("redis2.8以后用psync代替sync;psync支持完全重同步和部分重同步。")]),s._v(" "),t("li",[s._v("部分重同步的实现：偏移量（同步的字节量），复制积压缓冲区(固定长度的队列)，服务器运行id（判断是不是向同一个服务器发送的同步命令）。\n[外链图片转存中...(img-PHS6g12W-1653145947297)]")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("复制的实现")])]),s._v(" "),t("ul",[t("li",[s._v("设置主服务器地址和端口。Slaveof 127.0.0.1 6379。从服务器保存主服务器地址和端口。")]),s._v(" "),t("li",[s._v("建立套接字。从服务器根据保存的主服务器地址和端口号，建立套接字。")]),s._v(" "),t("li",[s._v("从服务器发送ping命令。超时或者错误则重新建立套接字重试；返回“PONG”说明网络连接正常。")]),s._v(" "),t("li",[s._v("身份验证。主从都没有设置身份验证或者设置一致才可以通过身份验证。")]),s._v(" "),t("li",[s._v("从服务器发送监听端口，主服务器将其保存在redisClient的slave_listening_port;")]),s._v(" "),t("li",[s._v("同步。从服务器向主服务发送psync命令。\n[外链图片转存中...(img-JbQvVK4o-1653145947297)]")])]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("心跳检测")])]),s._v(" "),t("blockquote",[t("p",[s._v("从服务器每秒发送命令给主服务器，replconf ack offset,有三个作用")])]),s._v(" "),t("ul",[t("li",[s._v("检测链接状况")]),s._v(" "),t("li",[s._v("辅助实现min-slaves选项。min-slaves-to-write 3，min-slaves-max-lag 10。表示从服务器少于3个，或者从服务延迟都大于等于10，主服务器将终止写命令。")]),s._v(" "),t("li",[s._v("检测命令丢失")])])])}),[],!1,null,null,null);n.default=e.exports}}]);