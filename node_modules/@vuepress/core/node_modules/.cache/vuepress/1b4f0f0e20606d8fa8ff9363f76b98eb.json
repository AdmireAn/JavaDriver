{"remainingRequest":"/Users/yonganwang/Documents/mygit/JavaDriver/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yonganwang/Documents/mygit/JavaDriver/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yonganwang/Documents/mygit/JavaDriver/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yonganwang/Documents/mygit/JavaDriver/node_modules/vuepress-theme-vdoing/components/Home.vue?vue&type=template&id=2423ae67&scoped=true&","dependencies":[{"path":"/Users/yonganwang/Documents/mygit/JavaDriver/node_modules/vuepress-theme-vdoing/components/Home.vue","mtime":1652965101830},{"path":"/Users/yonganwang/Documents/mygit/JavaDriver/node_modules/cache-loader/dist/cjs.js","mtime":1652965090365},{"path":"/Users/yonganwang/Documents/mygit/JavaDriver/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1652965096288},{"path":"/Users/yonganwang/Documents/mygit/JavaDriver/node_modules/cache-loader/dist/cjs.js","mtime":1652965090365},{"path":"/Users/yonganwang/Documents/mygit/JavaDriver/node_modules/vue-loader/lib/index.js","mtime":1652965092376}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}